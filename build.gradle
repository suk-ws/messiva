plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
}

repositories {
	mavenCentral()
	maven {
		name "wsReleases"
		url "https://mvn.sukazyo.cc/releases"
	}
	maven {
		name "wsSnapshots"
		url "https://mvn.sukazyo.cc/snapshots"
	}
}

group 'cc.sukazyo'
version PROJECT_VERSION
project.ext.archiveBaseName = 'messiva'
project.ext.artifactId = 'messiva'

dependencies {
	
	compileOnlyApi "com.github.spotbugs:spotbugs-annotations:${libSpotbugsVersion}"
	implementation "cc.sukazyo:da4a:0.2.0-SNAPSHOT"
	
//	implementation "org.jline:jline:${libJLineVersion}"
//	implementation "org.fusesource.jansi:jansi:${libJansiVersion}"
	
//	testImplementation "org.junit.jupiter:junit-jupiter-api:${libJUnitVersion}"
//	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${libJUnitVersion}"
	
}

test {
	useJUnitPlatform()
}

java {
	
	sourceCompatibility JavaVersion.VERSION_1_8
	targetCompatibility JavaVersion.VERSION_1_8
	
	withSourcesJar()
	
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

tasks.withType(Javadoc).configureEach {
	options.encoding = 'UTF-8'
	options.docEncoding = 'UTF-8'
	options.charSet = 'UTF-8'
}

tasks.test {
	useJUnitPlatform()
}

configurations.configureEach {
	resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
}

publishing {
	repositories{
		maven {
			name 'builds'
			url = "file://" + new File("./build/publishing").getAbsolutePath()
		}
		maven {
			name '-ws-'
			url publishMvnRepoUrl
			credentials {
				username publishMvnRepoUsername
				password publishMvnRepoPassword
			}
		}
	}
	publications {
		main (MavenPublication) {
			from components.java
			groupId = project.group
			artifactId = project.ext.artifactId
			version = project.version
		}
	}
}
